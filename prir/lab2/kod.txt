public class Lab2 {

    public static void main(String[] args) {

        M_prostokatow met1 = new M_prostokatow();
        met1.start();
        M_trapezow met2 = new M_trapezow();
        met2.start();
        M_Simpsona met3 = new M_Simpsona();
        met3.start();
        try{
            met1.join();
            met2.join();
            met3.join();
        } catch (InterruptedException e){

        }
        double suma = 0;
        suma += met1.calka;
        suma += met2.calka;
        suma += met3.calka;
        System.out.println("Suma wynosi " + suma);
    }

}

class M_prostokatow extends Thread{

    public double calka;

    private static double func(double x) {
        return x*x+3;
    }

    public void run() {
        double ai = 1;
        double bi = 3;
        double dx;
        int n = 3;

        dx = (bi - ai) / (double)n;

        calka = 0;
        for (int i=1; i<=n; i++) {
            calka += func(ai + i * dx);
        }
        calka *= dx;

        System.out.println("MP Wartość całki wynosi w przyblizeniu " + calka);
    }
}

class M_trapezow extends Thread{

    public double calka;

    private static double func(double x) {
        return x*x+3;
    }

    public void run() {
        double ai = 4;
        double bi = 6;
        double dx;
        int n = 3;

        dx = (bi - ai) / (double)n;

        calka = 0;
        for (int i=1; i<n; i++) {
            calka += func(ai + i * dx);
        }
        calka += (func(ai) + func(bi)) / 2;
        calka *= dx;

        System.out.println("MT Wartość całki wynosi w przyblizeniu " + calka);
    }
}

class M_Simpsona extends Thread{

    public double calka;

    private static double func(double x) {
        return x*x+3;
    }

    public void run() {
        double ai = 7;
        double bi = 9;
        double dx, s, x;
        int n = 3;

        dx = (bi - ai) / (double)n;

        calka = 0;
        s = 0;
        for (int i=1; i<n; i++) {
            x = ai + i*dx;
            s += func(x - dx / 2);
            calka += func(x);
        }
        s += func(bi - dx / 2);
        calka = (dx/6) * (func(ai) + func(bi) + 2*calka + 4*s);

        System.out.println("MS Wartosc calki wynosi w przyblizeniu " + calka);

    }

}