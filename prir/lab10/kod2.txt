import tensorflow as tf
import numpy as np
from tensorflow import keras

def funckja(x):
  y = (x - 2) * (x + 1) * (x - 4)
  return y

xs = np.empty([6], dtype=float)
ys = np.empty([6], dtype=float)
for i in range(-1,5):
  xs[i + 1] = i
  ys[i + 1] = funckja(i)

model = tf.keras.Sequential([keras.layers.Dense(units=1, input_shape=[1])])

model.compile(optimizer='sgd', loss='mean_squared_error')

model.fit(xs, ys, epochs=500)

print(model.predict([1]))
# print(xs, ys)